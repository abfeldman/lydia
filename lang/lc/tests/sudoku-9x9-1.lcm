(
 :csp_hierarchy
 (
  (
   :node
   Everywhere
   ()
   (
    :csp
    ((:values_set tile (one two three four five six seven eight nine)))
    (
     (:enum_variable (:identifier g (0) $nil) () 0)
     (:enum_variable (:identifier g (1) $nil) () 0)
     (:enum_variable (:identifier g (2) $nil) () 0)
     (:enum_variable (:identifier g (3) $nil) () 0)
     (:enum_variable (:identifier g (4) $nil) () 0)
     (:enum_variable (:identifier g (5) $nil) () 0)
     (:enum_variable (:identifier g (6) $nil) () 0)
     (:enum_variable (:identifier g (7) $nil) () 0)
     (:enum_variable (:identifier g (8) $nil) () 0)
    )
    ()
    ()
    0
    (
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 1))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 2))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 3))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 4))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 5))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 6))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 7))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 0))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 1))
       (:csp_atomic_sentence (:csp_variable_term 2))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 1))
       (:csp_atomic_sentence (:csp_variable_term 3))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 1))
       (:csp_atomic_sentence (:csp_variable_term 4))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 1))
       (:csp_atomic_sentence (:csp_variable_term 5))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 1))
       (:csp_atomic_sentence (:csp_variable_term 6))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 1))
       (:csp_atomic_sentence (:csp_variable_term 7))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 1))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 2))
       (:csp_atomic_sentence (:csp_variable_term 3))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 2))
       (:csp_atomic_sentence (:csp_variable_term 4))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 2))
       (:csp_atomic_sentence (:csp_variable_term 5))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 2))
       (:csp_atomic_sentence (:csp_variable_term 6))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 2))
       (:csp_atomic_sentence (:csp_variable_term 7))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 2))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 3))
       (:csp_atomic_sentence (:csp_variable_term 4))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 3))
       (:csp_atomic_sentence (:csp_variable_term 5))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 3))
       (:csp_atomic_sentence (:csp_variable_term 6))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 3))
       (:csp_atomic_sentence (:csp_variable_term 7))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 3))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 4))
       (:csp_atomic_sentence (:csp_variable_term 5))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 4))
       (:csp_atomic_sentence (:csp_variable_term 6))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 4))
       (:csp_atomic_sentence (:csp_variable_term 7))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 4))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 5))
       (:csp_atomic_sentence (:csp_variable_term 6))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 5))
       (:csp_atomic_sentence (:csp_variable_term 7))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 5))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 6))
       (:csp_atomic_sentence (:csp_variable_term 7))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 6))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
     (
      :csp_not_sentence
      (
       :csp_equiv_sentence
       (:csp_atomic_sentence (:csp_variable_term 7))
       (:csp_atomic_sentence (:csp_variable_term 8))
      )
     )
    )
   )
  )
  (
   :node
   Grid
   (
    (
     :edge
     Everywhere
     h
     (0)
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (0 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (0 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (0 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (0 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (0 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (0 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (0 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (0 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (1)
     (
      (:mapping (:identifier g (1 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (1 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (1 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (1 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (1 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (1 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (2)
     (
      (:mapping (:identifier g (2 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (2 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (2 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (2 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (2 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (2 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (3)
     (
      (:mapping (:identifier g (3 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (3 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (3 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (3 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (3 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (3 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (4)
     (
      (:mapping (:identifier g (4 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (4 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (4 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (4 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (4 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (4 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (4 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (4 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (5)
     (
      (:mapping (:identifier g (5 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (5 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (5 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (5 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (5 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (5 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (5 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (5 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (6)
     (
      (:mapping (:identifier g (6 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (6 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (6 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (6 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (6 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (6 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (6 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (6 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (7)
     (
      (:mapping (:identifier g (7 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (7 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (7 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (7 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (7 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (7 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (7 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (7 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (8)
     (
      (:mapping (:identifier g (8 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (8 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (8 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (8 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (8 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (8 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (8 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (8 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (0)
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 0) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 0) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 0) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 0) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 0) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 0) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 0) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 0) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (1)
     (
      (:mapping (:identifier g (0 1) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 1) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 1) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 1) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 1) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 1) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (2)
     (
      (:mapping (:identifier g (0 2) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 2) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 2) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 2) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 2) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 2) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (3)
     (
      (:mapping (:identifier g (0 3) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 3) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 3) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 3) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 3) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 3) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (4)
     (
      (:mapping (:identifier g (0 4) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 4) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 4) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 4) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 4) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 4) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 4) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 4) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (5)
     (
      (:mapping (:identifier g (0 5) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 5) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 5) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 5) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 5) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 5) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 5) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 5) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (6)
     (
      (:mapping (:identifier g (0 6) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 6) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 6) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 6) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 6) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 6) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 6) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 6) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (7)
     (
      (:mapping (:identifier g (0 7) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 7) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 7) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 7) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 7) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 7) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 7) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 7) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (8)
     (
      (:mapping (:identifier g (0 8) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 8) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 8) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 8) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 8) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (5 8) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (6 8) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (7 8) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (0)
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (0 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (0 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (1 0) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (2 0) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (2 2) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (1)
     (
      (:mapping (:identifier g (0 3) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (0 4) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (0 5) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (1 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (1 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (2 4) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (2 5) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (2)
     (
      (:mapping (:identifier g (0 6) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (0 7) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (0 8) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (1 6) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (1 7) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (1 8) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (2 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (2 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (2 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (3)
     (
      (:mapping (:identifier g (3 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (4 0) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 1) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (4 2) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (5 0) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (5 1) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (5 2) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (4)
     (
      (:mapping (:identifier g (3 3) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (3 4) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (3 5) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (4 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (4 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (5 3) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (5 4) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (5 5) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (5)
     (
      (:mapping (:identifier g (3 6) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (3 7) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (3 8) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (4 6) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (4 7) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (4 8) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (5 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (5 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (5 8) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (6)
     (
      (:mapping (:identifier g (6 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (6 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (6 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (7 0) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (7 1) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (7 2) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (8 0) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (8 1) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 2) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (7)
     (
      (:mapping (:identifier g (6 3) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (6 4) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (6 5) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (7 3) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (7 4) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (7 5) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (8 3) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (8 4) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 5) $nil) (:identifier g (8) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (8)
     (
      (:mapping (:identifier g (6 6) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (6 7) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (6 8) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (7 6) $nil) (:identifier g (3) $nil))
      (:mapping (:identifier g (7 7) $nil) (:identifier g (4) $nil))
      (:mapping (:identifier g (7 8) $nil) (:identifier g (5) $nil))
      (:mapping (:identifier g (8 6) $nil) (:identifier g (6) $nil))
      (:mapping (:identifier g (8 7) $nil) (:identifier g (7) $nil))
      (:mapping (:identifier g (8 8) $nil) (:identifier g (8) $nil))
     )
    )
   )
   (
    :csp
    ((:values_set tile (one two three four five six seven eight nine)))
    (
     (:enum_variable (:identifier g (0 0) $nil) () 0)
     (:enum_variable (:identifier g (0 1) $nil) () 0)
     (:enum_variable (:identifier g (0 2) $nil) () 0)
     (:enum_variable (:identifier g (0 3) $nil) () 0)
     (:enum_variable (:identifier g (0 4) $nil) () 0)
     (:enum_variable (:identifier g (0 5) $nil) () 0)
     (:enum_variable (:identifier g (0 6) $nil) () 0)
     (:enum_variable (:identifier g (0 7) $nil) () 0)
     (:enum_variable (:identifier g (0 8) $nil) () 0)
     (:enum_variable (:identifier g (1 0) $nil) () 0)
     (:enum_variable (:identifier g (1 1) $nil) () 0)
     (:enum_variable (:identifier g (1 2) $nil) () 0)
     (:enum_variable (:identifier g (1 3) $nil) () 0)
     (:enum_variable (:identifier g (1 4) $nil) () 0)
     (:enum_variable (:identifier g (1 5) $nil) () 0)
     (:enum_variable (:identifier g (1 6) $nil) () 0)
     (:enum_variable (:identifier g (1 7) $nil) () 0)
     (:enum_variable (:identifier g (1 8) $nil) () 0)
     (:enum_variable (:identifier g (2 0) $nil) () 0)
     (:enum_variable (:identifier g (2 1) $nil) () 0)
     (:enum_variable (:identifier g (2 2) $nil) () 0)
     (:enum_variable (:identifier g (2 3) $nil) () 0)
     (:enum_variable (:identifier g (2 4) $nil) () 0)
     (:enum_variable (:identifier g (2 5) $nil) () 0)
     (:enum_variable (:identifier g (2 6) $nil) () 0)
     (:enum_variable (:identifier g (2 7) $nil) () 0)
     (:enum_variable (:identifier g (2 8) $nil) () 0)
     (:enum_variable (:identifier g (3 0) $nil) () 0)
     (:enum_variable (:identifier g (3 1) $nil) () 0)
     (:enum_variable (:identifier g (3 2) $nil) () 0)
     (:enum_variable (:identifier g (3 3) $nil) () 0)
     (:enum_variable (:identifier g (3 4) $nil) () 0)
     (:enum_variable (:identifier g (3 5) $nil) () 0)
     (:enum_variable (:identifier g (3 6) $nil) () 0)
     (:enum_variable (:identifier g (3 7) $nil) () 0)
     (:enum_variable (:identifier g (3 8) $nil) () 0)
     (:enum_variable (:identifier g (4 0) $nil) () 0)
     (:enum_variable (:identifier g (4 1) $nil) () 0)
     (:enum_variable (:identifier g (4 2) $nil) () 0)
     (:enum_variable (:identifier g (4 3) $nil) () 0)
     (:enum_variable (:identifier g (4 4) $nil) () 0)
     (:enum_variable (:identifier g (4 5) $nil) () 0)
     (:enum_variable (:identifier g (4 6) $nil) () 0)
     (:enum_variable (:identifier g (4 7) $nil) () 0)
     (:enum_variable (:identifier g (4 8) $nil) () 0)
     (:enum_variable (:identifier g (5 0) $nil) () 0)
     (:enum_variable (:identifier g (5 1) $nil) () 0)
     (:enum_variable (:identifier g (5 2) $nil) () 0)
     (:enum_variable (:identifier g (5 3) $nil) () 0)
     (:enum_variable (:identifier g (5 4) $nil) () 0)
     (:enum_variable (:identifier g (5 5) $nil) () 0)
     (:enum_variable (:identifier g (5 6) $nil) () 0)
     (:enum_variable (:identifier g (5 7) $nil) () 0)
     (:enum_variable (:identifier g (5 8) $nil) () 0)
     (:enum_variable (:identifier g (6 0) $nil) () 0)
     (:enum_variable (:identifier g (6 1) $nil) () 0)
     (:enum_variable (:identifier g (6 2) $nil) () 0)
     (:enum_variable (:identifier g (6 3) $nil) () 0)
     (:enum_variable (:identifier g (6 4) $nil) () 0)
     (:enum_variable (:identifier g (6 5) $nil) () 0)
     (:enum_variable (:identifier g (6 6) $nil) () 0)
     (:enum_variable (:identifier g (6 7) $nil) () 0)
     (:enum_variable (:identifier g (6 8) $nil) () 0)
     (:enum_variable (:identifier g (7 0) $nil) () 0)
     (:enum_variable (:identifier g (7 1) $nil) () 0)
     (:enum_variable (:identifier g (7 2) $nil) () 0)
     (:enum_variable (:identifier g (7 3) $nil) () 0)
     (:enum_variable (:identifier g (7 4) $nil) () 0)
     (:enum_variable (:identifier g (7 5) $nil) () 0)
     (:enum_variable (:identifier g (7 6) $nil) () 0)
     (:enum_variable (:identifier g (7 7) $nil) () 0)
     (:enum_variable (:identifier g (7 8) $nil) () 0)
     (:enum_variable (:identifier g (8 0) $nil) () 0)
     (:enum_variable (:identifier g (8 1) $nil) () 0)
     (:enum_variable (:identifier g (8 2) $nil) () 0)
     (:enum_variable (:identifier g (8 3) $nil) () 0)
     (:enum_variable (:identifier g (8 4) $nil) () 0)
     (:enum_variable (:identifier g (8 5) $nil) () 0)
     (:enum_variable (:identifier g (8 6) $nil) () 0)
     (:enum_variable (:identifier g (8 7) $nil) () 0)
     (:enum_variable (:identifier g (8 8) $nil) () 0)
    )
    ()
    ()
    0
    ()
   )
  )
  (
   :node
   Sudoku
   (
    (
     :edge
     Grid
     grid
     $nil
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0 0) $nil))
      (:mapping (:identifier g (0 1) $nil) (:identifier g (0 1) $nil))
      (:mapping (:identifier g (0 2) $nil) (:identifier g (0 2) $nil))
      (:mapping (:identifier g (0 3) $nil) (:identifier g (0 3) $nil))
      (:mapping (:identifier g (0 4) $nil) (:identifier g (0 4) $nil))
      (:mapping (:identifier g (0 5) $nil) (:identifier g (0 5) $nil))
      (:mapping (:identifier g (0 6) $nil) (:identifier g (0 6) $nil))
      (:mapping (:identifier g (0 7) $nil) (:identifier g (0 7) $nil))
      (:mapping (:identifier g (0 8) $nil) (:identifier g (0 8) $nil))
      (:mapping (:identifier g (1 0) $nil) (:identifier g (1 0) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (1 1) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (1 2) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (1 3) $nil))
      (:mapping (:identifier g (1 4) $nil) (:identifier g (1 4) $nil))
      (:mapping (:identifier g (1 5) $nil) (:identifier g (1 5) $nil))
      (:mapping (:identifier g (1 6) $nil) (:identifier g (1 6) $nil))
      (:mapping (:identifier g (1 7) $nil) (:identifier g (1 7) $nil))
      (:mapping (:identifier g (1 8) $nil) (:identifier g (1 8) $nil))
      (:mapping (:identifier g (2 0) $nil) (:identifier g (2 0) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (2 1) $nil))
      (:mapping (:identifier g (2 2) $nil) (:identifier g (2 2) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (2 3) $nil))
      (:mapping (:identifier g (2 4) $nil) (:identifier g (2 4) $nil))
      (:mapping (:identifier g (2 5) $nil) (:identifier g (2 5) $nil))
      (:mapping (:identifier g (2 6) $nil) (:identifier g (2 6) $nil))
      (:mapping (:identifier g (2 7) $nil) (:identifier g (2 7) $nil))
      (:mapping (:identifier g (2 8) $nil) (:identifier g (2 8) $nil))
      (:mapping (:identifier g (3 0) $nil) (:identifier g (3 0) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (3 1) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (3 2) $nil))
      (:mapping (:identifier g (3 3) $nil) (:identifier g (3 3) $nil))
      (:mapping (:identifier g (3 4) $nil) (:identifier g (3 4) $nil))
      (:mapping (:identifier g (3 5) $nil) (:identifier g (3 5) $nil))
      (:mapping (:identifier g (3 6) $nil) (:identifier g (3 6) $nil))
      (:mapping (:identifier g (3 7) $nil) (:identifier g (3 7) $nil))
      (:mapping (:identifier g (3 8) $nil) (:identifier g (3 8) $nil))
      (:mapping (:identifier g (4 0) $nil) (:identifier g (4 0) $nil))
      (:mapping (:identifier g (4 1) $nil) (:identifier g (4 1) $nil))
      (:mapping (:identifier g (4 2) $nil) (:identifier g (4 2) $nil))
      (:mapping (:identifier g (4 3) $nil) (:identifier g (4 3) $nil))
      (:mapping (:identifier g (4 4) $nil) (:identifier g (4 4) $nil))
      (:mapping (:identifier g (4 5) $nil) (:identifier g (4 5) $nil))
      (:mapping (:identifier g (4 6) $nil) (:identifier g (4 6) $nil))
      (:mapping (:identifier g (4 7) $nil) (:identifier g (4 7) $nil))
      (:mapping (:identifier g (4 8) $nil) (:identifier g (4 8) $nil))
      (:mapping (:identifier g (5 0) $nil) (:identifier g (5 0) $nil))
      (:mapping (:identifier g (5 1) $nil) (:identifier g (5 1) $nil))
      (:mapping (:identifier g (5 2) $nil) (:identifier g (5 2) $nil))
      (:mapping (:identifier g (5 3) $nil) (:identifier g (5 3) $nil))
      (:mapping (:identifier g (5 4) $nil) (:identifier g (5 4) $nil))
      (:mapping (:identifier g (5 5) $nil) (:identifier g (5 5) $nil))
      (:mapping (:identifier g (5 6) $nil) (:identifier g (5 6) $nil))
      (:mapping (:identifier g (5 7) $nil) (:identifier g (5 7) $nil))
      (:mapping (:identifier g (5 8) $nil) (:identifier g (5 8) $nil))
      (:mapping (:identifier g (6 0) $nil) (:identifier g (6 0) $nil))
      (:mapping (:identifier g (6 1) $nil) (:identifier g (6 1) $nil))
      (:mapping (:identifier g (6 2) $nil) (:identifier g (6 2) $nil))
      (:mapping (:identifier g (6 3) $nil) (:identifier g (6 3) $nil))
      (:mapping (:identifier g (6 4) $nil) (:identifier g (6 4) $nil))
      (:mapping (:identifier g (6 5) $nil) (:identifier g (6 5) $nil))
      (:mapping (:identifier g (6 6) $nil) (:identifier g (6 6) $nil))
      (:mapping (:identifier g (6 7) $nil) (:identifier g (6 7) $nil))
      (:mapping (:identifier g (6 8) $nil) (:identifier g (6 8) $nil))
      (:mapping (:identifier g (7 0) $nil) (:identifier g (7 0) $nil))
      (:mapping (:identifier g (7 1) $nil) (:identifier g (7 1) $nil))
      (:mapping (:identifier g (7 2) $nil) (:identifier g (7 2) $nil))
      (:mapping (:identifier g (7 3) $nil) (:identifier g (7 3) $nil))
      (:mapping (:identifier g (7 4) $nil) (:identifier g (7 4) $nil))
      (:mapping (:identifier g (7 5) $nil) (:identifier g (7 5) $nil))
      (:mapping (:identifier g (7 6) $nil) (:identifier g (7 6) $nil))
      (:mapping (:identifier g (7 7) $nil) (:identifier g (7 7) $nil))
      (:mapping (:identifier g (7 8) $nil) (:identifier g (7 8) $nil))
      (:mapping (:identifier g (8 0) $nil) (:identifier g (8 0) $nil))
      (:mapping (:identifier g (8 1) $nil) (:identifier g (8 1) $nil))
      (:mapping (:identifier g (8 2) $nil) (:identifier g (8 2) $nil))
      (:mapping (:identifier g (8 3) $nil) (:identifier g (8 3) $nil))
      (:mapping (:identifier g (8 4) $nil) (:identifier g (8 4) $nil))
      (:mapping (:identifier g (8 5) $nil) (:identifier g (8 5) $nil))
      (:mapping (:identifier g (8 6) $nil) (:identifier g (8 6) $nil))
      (:mapping (:identifier g (8 7) $nil) (:identifier g (8 7) $nil))
      (:mapping (:identifier g (8 8) $nil) (:identifier g (8 8) $nil))
     )
    )
   )
   (
    :csp
    ((:values_set tile (one two three four five six seven eight nine)))
    (
     (
      :enum_variable
      (:identifier g (0 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (4 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (5 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (6 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (7 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 0) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 1) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 2) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 3) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 4) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 5) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 6) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 7) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
     (
      :enum_variable
      (:identifier g (8 8) $nil)
      (
       (
	:bool_variable_attribute
	health
	(t nil nil nil nil nil nil nil nil)
       )
       (
	:float_variable_attribute
	probability
	(
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	 0.1111111111111111
	)
       )
      )
      0
     )
    )
    ()
    (
     (:enum_constant $nil six 0)
     (:enum_constant $nil one 0)
     (:enum_constant $nil four 0)
     (:enum_constant $nil five 0)
     (:enum_constant $nil eight 0)
     (:enum_constant $nil three 0)
     (:enum_constant $nil two 0)
     (:enum_constant $nil seven 0)
     (:enum_constant $nil nine 0)
    )
    0
    (
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 1))
      (:csp_atomic_sentence (:csp_constant_term 0))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 3))
      (:csp_atomic_sentence (:csp_constant_term 1))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 5))
      (:csp_atomic_sentence (:csp_constant_term 2))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 7))
      (:csp_atomic_sentence (:csp_constant_term 3))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 11))
      (:csp_atomic_sentence (:csp_constant_term 4))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 12))
      (:csp_atomic_sentence (:csp_constant_term 5))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 14))
      (:csp_atomic_sentence (:csp_constant_term 3))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 15))
      (:csp_atomic_sentence (:csp_constant_term 0))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 18))
      (:csp_atomic_sentence (:csp_constant_term 6))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 26))
      (:csp_atomic_sentence (:csp_constant_term 1))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 27))
      (:csp_atomic_sentence (:csp_constant_term 4))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 30))
      (:csp_atomic_sentence (:csp_constant_term 2))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 32))
      (:csp_atomic_sentence (:csp_constant_term 7))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 35))
      (:csp_atomic_sentence (:csp_constant_term 0))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 38))
      (:csp_atomic_sentence (:csp_constant_term 0))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 42))
      (:csp_atomic_sentence (:csp_constant_term 5))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 45))
      (:csp_atomic_sentence (:csp_constant_term 7))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 48))
      (:csp_atomic_sentence (:csp_constant_term 8))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 50))
      (:csp_atomic_sentence (:csp_constant_term 1))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 53))
      (:csp_atomic_sentence (:csp_constant_term 2))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 54))
      (:csp_atomic_sentence (:csp_constant_term 3))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 62))
      (:csp_atomic_sentence (:csp_constant_term 6))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 65))
      (:csp_atomic_sentence (:csp_constant_term 7))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 66))
      (:csp_atomic_sentence (:csp_constant_term 6))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 68))
      (:csp_atomic_sentence (:csp_constant_term 0))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 69))
      (:csp_atomic_sentence (:csp_constant_term 8))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 73))
      (:csp_atomic_sentence (:csp_constant_term 2))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 75))
      (:csp_atomic_sentence (:csp_constant_term 3))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 77))
      (:csp_atomic_sentence (:csp_constant_term 4))
     )
     (
      :csp_equiv_sentence
      (:csp_atomic_sentence (:csp_variable_term 79))
      (:csp_atomic_sentence (:csp_constant_term 7))
     )
    )
   )
  )
 )
)

(
 :tv_wff_flat_kb
 copier
 (
  :tv_wff
  ()
  (
   (:bool_variable (:identifier pwr $nil $nil) () -1)
   (:bool_variable (:identifier original_rdy $nil $nil) () -1)
   (:bool_variable (:identifier paper_rdy $nil $nil) () -1)
   (:bool_variable (:identifier rdy $nil $nil) () -1)
   (
    :bool_variable
    (:identifier f_pwr $nil $nil)
    (
     (:float_variable_attribute probability (0.997 0.003))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
   (
    :bool_variable
    (:identifier f_no_original $nil $nil)
    (
     (:float_variable_attribute probability (0.97 0.03))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
   (
    :bool_variable
    (:identifier f_no_paper $nil $nil)
    (
     (:float_variable_attribute probability (0.975 0.025))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
   (
    :bool_variable
    (:identifier in_tray_filled $nil $nil)
    ((:bool_variable_attribute observable (t t)))
    -1
   )
   (
    :bool_variable
    (:identifier paper_tray_filled $nil $nil)
    ((:bool_variable_attribute observable (t t)))
    -1
   )
   (
    :bool_variable
    (:identifier pwr_led $nil $nil)
    ((:bool_variable_attribute observable (t t)))
    -1
   )
   (
    :bool_variable
    (:identifier rdy_led $nil $nil)
    ((:bool_variable_attribute observable (t t)))
    -1
   )
   (
    :bool_variable
    (:identifier paper_rdy_led $nil $nil)
    ((:bool_variable_attribute observable (t t)))
    -1
   )
   (:bool_variable (:identifier $in_paper_sensor#1 $nil $nil) () -1)
   (:bool_variable (:identifier $copier_paper_sensor#1 $nil $nil) () -1)
   (
    :bool_variable
    (:identifier f $nil ((:qualifier in_paper_sensor $nil)))
    (
     (:float_variable_attribute probability (0.999 0.001))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
   (
    :bool_variable
    (:identifier f $nil ((:qualifier copier_paper_sensor $nil)))
    (
     (:float_variable_attribute probability (0.999 0.001))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
   (
    :bool_variable
    (:identifier f $nil ((:qualifier pwr_led $nil)))
    (
     (:float_variable_attribute probability (0.99999 1e-05))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
   (
    :bool_variable
    (:identifier f $nil ((:qualifier rdy_led $nil)))
    (
     (:float_variable_attribute probability (0.99999 1e-05))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
   (
    :bool_variable
    (:identifier f $nil ((:qualifier paper_rdy_led $nil)))
    (
     (:float_variable_attribute probability (0.99999 1e-05))
     (:bool_variable_attribute health (t nil))
    )
    -1
   )
  )
  ()
  ()
  0
  (
   (
    :tv_wff_e_and
    (
     :tv_wff_e_and
     (
      :tv_wff_e_and
      (
       :tv_wff_e_and
       (
	:tv_wff_e_and
	(
	 :tv_wff_e_equiv
	 (:tv_wff_e_var 4)
	 (:tv_wff_e_not (:tv_wff_e_var 0))
	)
	(
	 :tv_wff_e_equiv
	 (:tv_wff_e_var 5)
	 (:tv_wff_e_not (:tv_wff_e_var 7))
	)
       )
       (
	:tv_wff_e_equiv
	(:tv_wff_e_var 6)
	(:tv_wff_e_not (:tv_wff_e_var 8))
       )
      )
      (
       :tv_wff_e_equiv
       (:tv_wff_e_var 3)
       (
	:tv_wff_e_and
	(:tv_wff_e_and (:tv_wff_e_var 0) (:tv_wff_e_var 2))
	(:tv_wff_e_var 1)
       )
      )
     )
     (
      :tv_wff_e_equiv
      (:tv_wff_e_var 12)
      (:tv_wff_e_and (:tv_wff_e_var 7) (:tv_wff_e_var 0))
     )
    )
    (
     :tv_wff_e_equiv
     (:tv_wff_e_var 13)
     (:tv_wff_e_and (:tv_wff_e_var 8) (:tv_wff_e_var 0))
    )
   )
   (
    :tv_wff_e_impl
    (:tv_wff_e_not (:tv_wff_e_var 14))
    (:tv_wff_e_equiv (:tv_wff_e_var 1) (:tv_wff_e_var 12))
   )
   (
    :tv_wff_e_impl
    (:tv_wff_e_not (:tv_wff_e_var 15))
    (:tv_wff_e_equiv (:tv_wff_e_var 2) (:tv_wff_e_var 13))
   )
   (
    :tv_wff_e_equiv
    (:tv_wff_e_var 9)
    (:tv_wff_e_and (:tv_wff_e_var 0) (:tv_wff_e_not (:tv_wff_e_var 16)))
   )
   (
    :tv_wff_e_equiv
    (:tv_wff_e_var 10)
    (:tv_wff_e_and (:tv_wff_e_var 3) (:tv_wff_e_not (:tv_wff_e_var 17)))
   )
   (
    :tv_wff_e_equiv
    (:tv_wff_e_var 11)
    (:tv_wff_e_and (:tv_wff_e_var 2) (:tv_wff_e_not (:tv_wff_e_var 18)))
   )
  )
 )
)

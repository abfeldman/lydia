(
 :mv_wff_hierarchy
 (
  (
   :node
   Everywhere
   ()
   (
    :mv_wff
    ((:values_set tile (one two three four)))
    (
     (:enum_variable (:identifier g (0) $nil) () 0)
     (:enum_variable (:identifier g (1) $nil) () 0)
     (:enum_variable (:identifier g (2) $nil) () 0)
     (:enum_variable (:identifier g (3) $nil) () 0)
    )
    ()
    ()
    0
    (
     (
      :mv_wff_e_not
      (
       :mv_wff_e_or
       (
	:mv_wff_e_or
	(
	 :mv_wff_e_or
	 (:mv_wff_e_and (:mv_wff_e_var 0 0) (:mv_wff_e_var 1 0))
	 (:mv_wff_e_and (:mv_wff_e_var 0 1) (:mv_wff_e_var 1 1))
	)
	(:mv_wff_e_and (:mv_wff_e_var 0 2) (:mv_wff_e_var 1 2))
       )
       (:mv_wff_e_and (:mv_wff_e_var 0 3) (:mv_wff_e_var 1 3))
      )
     )
     (
      :mv_wff_e_not
      (
       :mv_wff_e_or
       (
	:mv_wff_e_or
	(
	 :mv_wff_e_or
	 (:mv_wff_e_and (:mv_wff_e_var 0 0) (:mv_wff_e_var 2 0))
	 (:mv_wff_e_and (:mv_wff_e_var 0 1) (:mv_wff_e_var 2 1))
	)
	(:mv_wff_e_and (:mv_wff_e_var 0 2) (:mv_wff_e_var 2 2))
       )
       (:mv_wff_e_and (:mv_wff_e_var 0 3) (:mv_wff_e_var 2 3))
      )
     )
     (
      :mv_wff_e_not
      (
       :mv_wff_e_or
       (
	:mv_wff_e_or
	(
	 :mv_wff_e_or
	 (:mv_wff_e_and (:mv_wff_e_var 0 0) (:mv_wff_e_var 3 0))
	 (:mv_wff_e_and (:mv_wff_e_var 0 1) (:mv_wff_e_var 3 1))
	)
	(:mv_wff_e_and (:mv_wff_e_var 0 2) (:mv_wff_e_var 3 2))
       )
       (:mv_wff_e_and (:mv_wff_e_var 0 3) (:mv_wff_e_var 3 3))
      )
     )
     (
      :mv_wff_e_not
      (
       :mv_wff_e_or
       (
	:mv_wff_e_or
	(
	 :mv_wff_e_or
	 (:mv_wff_e_and (:mv_wff_e_var 1 0) (:mv_wff_e_var 2 0))
	 (:mv_wff_e_and (:mv_wff_e_var 1 1) (:mv_wff_e_var 2 1))
	)
	(:mv_wff_e_and (:mv_wff_e_var 1 2) (:mv_wff_e_var 2 2))
       )
       (:mv_wff_e_and (:mv_wff_e_var 1 3) (:mv_wff_e_var 2 3))
      )
     )
     (
      :mv_wff_e_not
      (
       :mv_wff_e_or
       (
	:mv_wff_e_or
	(
	 :mv_wff_e_or
	 (:mv_wff_e_and (:mv_wff_e_var 1 0) (:mv_wff_e_var 3 0))
	 (:mv_wff_e_and (:mv_wff_e_var 1 1) (:mv_wff_e_var 3 1))
	)
	(:mv_wff_e_and (:mv_wff_e_var 1 2) (:mv_wff_e_var 3 2))
       )
       (:mv_wff_e_and (:mv_wff_e_var 1 3) (:mv_wff_e_var 3 3))
      )
     )
     (
      :mv_wff_e_not
      (
       :mv_wff_e_or
       (
	:mv_wff_e_or
	(
	 :mv_wff_e_or
	 (:mv_wff_e_and (:mv_wff_e_var 2 0) (:mv_wff_e_var 3 0))
	 (:mv_wff_e_and (:mv_wff_e_var 2 1) (:mv_wff_e_var 3 1))
	)
	(:mv_wff_e_and (:mv_wff_e_var 2 2) (:mv_wff_e_var 3 2))
       )
       (:mv_wff_e_and (:mv_wff_e_var 2 3) (:mv_wff_e_var 3 3))
      )
     )
    )
   )
  )
  (
   :node
   Grid
   (
    (
     :edge
     Everywhere
     h
     (0)
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (0 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (0 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (0 3) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (0)
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 0) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 0) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 0) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (1)
     (
      (:mapping (:identifier g (1 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (1)
     (
      (:mapping (:identifier g (0 1) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (2)
     (
      (:mapping (:identifier g (2 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (2)
     (
      (:mapping (:identifier g (0 2) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     h
     (3)
     (
      (:mapping (:identifier g (3 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 3) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     v
     (3)
     (
      (:mapping (:identifier g (0 3) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 3) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (0)
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (0 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (1 0) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (1)
     (
      (:mapping (:identifier g (0 2) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (0 3) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (2)
     (
      (:mapping (:identifier g (2 0) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (3 0) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (3) $nil))
     )
    )
    (
     :edge
     Everywhere
     b
     (3)
     (
      (:mapping (:identifier g (2 2) $nil) (:identifier g (0) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (1) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (2) $nil))
      (:mapping (:identifier g (3 3) $nil) (:identifier g (3) $nil))
     )
    )
   )
   (
    :mv_wff
    ((:values_set tile (one two three four)))
    (
     (:enum_variable (:identifier g (0 0) $nil) () 0)
     (:enum_variable (:identifier g (0 1) $nil) () 0)
     (:enum_variable (:identifier g (0 2) $nil) () 0)
     (:enum_variable (:identifier g (0 3) $nil) () 0)
     (:enum_variable (:identifier g (1 0) $nil) () 0)
     (:enum_variable (:identifier g (1 1) $nil) () 0)
     (:enum_variable (:identifier g (1 2) $nil) () 0)
     (:enum_variable (:identifier g (1 3) $nil) () 0)
     (:enum_variable (:identifier g (2 0) $nil) () 0)
     (:enum_variable (:identifier g (2 1) $nil) () 0)
     (:enum_variable (:identifier g (2 2) $nil) () 0)
     (:enum_variable (:identifier g (2 3) $nil) () 0)
     (:enum_variable (:identifier g (3 0) $nil) () 0)
     (:enum_variable (:identifier g (3 1) $nil) () 0)
     (:enum_variable (:identifier g (3 2) $nil) () 0)
     (:enum_variable (:identifier g (3 3) $nil) () 0)
    )
    ()
    ()
    0
    ()
   )
  )
  (
   :node
   Sudoku
   (
    (
     :edge
     Grid
     grid
     $nil
     (
      (:mapping (:identifier g (0 0) $nil) (:identifier g (0 0) $nil))
      (:mapping (:identifier g (0 1) $nil) (:identifier g (0 1) $nil))
      (:mapping (:identifier g (0 2) $nil) (:identifier g (0 2) $nil))
      (:mapping (:identifier g (0 3) $nil) (:identifier g (0 3) $nil))
      (:mapping (:identifier g (1 0) $nil) (:identifier g (1 0) $nil))
      (:mapping (:identifier g (1 1) $nil) (:identifier g (1 1) $nil))
      (:mapping (:identifier g (1 2) $nil) (:identifier g (1 2) $nil))
      (:mapping (:identifier g (1 3) $nil) (:identifier g (1 3) $nil))
      (:mapping (:identifier g (2 0) $nil) (:identifier g (2 0) $nil))
      (:mapping (:identifier g (2 1) $nil) (:identifier g (2 1) $nil))
      (:mapping (:identifier g (2 2) $nil) (:identifier g (2 2) $nil))
      (:mapping (:identifier g (2 3) $nil) (:identifier g (2 3) $nil))
      (:mapping (:identifier g (3 0) $nil) (:identifier g (3 0) $nil))
      (:mapping (:identifier g (3 1) $nil) (:identifier g (3 1) $nil))
      (:mapping (:identifier g (3 2) $nil) (:identifier g (3 2) $nil))
      (:mapping (:identifier g (3 3) $nil) (:identifier g (3 3) $nil))
     )
    )
   )
   (
    :mv_wff
    ((:values_set tile (one two three four)))
    (
     (
      :enum_variable
      (:identifier g (0 0) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 1) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 2) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (0 3) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 0) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 1) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 2) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (1 3) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 0) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 1) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 2) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (2 3) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 0) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 1) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 2) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
     (
      :enum_variable
      (:identifier g (3 3) $nil)
      (
       (:bool_variable_attribute health (t nil nil nil))
       (:float_variable_attribute probability (0.25 0.25 0.25 0.25))
      )
      0
     )
    )
    ()
    ()
    0
    (
     (:mv_wff_e_var 0 0)
     (:mv_wff_e_var 2 2)
     (:mv_wff_e_var 4 1)
     (:mv_wff_e_var 11 2)
     (:mv_wff_e_var 13 1)
     (:mv_wff_e_var 15 0)
    )
   )
  )
 )
)

system or2(bool i1, i2, o)
{
	bool h;

	attribute probability(h) = (h ? 0.99 : 0.01);
	attribute health(h) = h;
	
	h => (o = (i1 or i2));
}

system and2(bool i1, i2, o)
{
	bool h;

	attribute probability(h) = (h ? 0.99 : 0.01);
	attribute health(h) = h;
	
	h => (o = (i1 and i2));
}

system xor2(bool i1, i2, o)
{
	bool h;

	attribute probability(h) = (h ? 0.99 : 0.01);
	attribute health(h) = h;
	
	h => (o = (i1 != i2));
}

system halfadder2(bool i1, i2, sum, carry)
{
    system and2 A(i1, i2, carry);
    system xor2 X(i1, i2, sum);
}

system fulladder2(bool i1, i2, ci, sum, carry)
{
    bool p, q, f;

    system halfadder2 H1(i1, i2, f, p);
    system halfadder2 H2(ci, f, sum, q);
    system or2 O(p, q, carry);
}

system bit0(bool a0, b0, m0)
{
	system and2 A1(a0, b0, m0);
}

system bit1(bool a0, a1, b0, b1, m1, carry)
{
    bool a1b01, a0b12, a0b1, a1b0;

	system and2 A1(a1, b0, a1b01);
	system and2 A2(a0, b1, a0b12);
	system halfadder2 H1(a0b1, a1b0, carry, m1);
}

system bit2(bool a0, a1, a2, b0, b1, b2, ci, m2, carry0, carry1)
{
    bool a2b01, a1b12, a0b23, a1b1, a0b2, sum0, a2b0;

	system and2 A1(a2, b0, a2b01);
	system and2 A2(a1, b1, a1b12);
	system and2 A3(a0, b2, a0b23);
	system halfadder2 H1(a1b1, a0b2, sum0, carry0);
	system fulladder2 F1(a2b0, sum0, ci, m2, carry1);
}

system bit3(bool a1, a2, b1, b2, ci0, ci1, m3, carry0, carry1)
{
    bool a2b1, a1b2, sum0;

	system and2 A1(a2, b1, a2b1);
	system and2 A2(a1, b2, a1b2);
	system fulladder2 F1(a2b1, a1b2, ci0, sum0, carry0);
	system halfadder2 H1(ci1, sum0, m3, carry1);
}

system bit4(bool a2, b2, ci0, ci1, m4, carry)
{
    bool a2b2;

	system and2 A1(a2, b2, a2b2);
	system fulladder2 F1(a2b2, ci0, ci1, m4, carry);
}

system bit5(bool m5, carry)
{
	m5 = carry;
}

system multiplier(bool a2, a1, a0, b2, b1, b0, m5, m4, m3, m2, m1, m0)
{
    bool carry0, carry1, carry2, carry3, carry4;

    attribute observable(a2, a1, a0, b2, b1, b0, m5, m4, m3, m2, m1, m0) = true;

	system bit0 b0(a0, b0, m0);
	system bit1 b1(a0, a1, b0, b1, m1, carry0);
	system bit2 b2(a0, a1, a2, b0, b1, b2, carry0, m2, carry1, carry2);
	system bit3 b3(a1, a2, b1, b2, carry1, carry2, m3, carry3, carry4);
	system bit4 b4(a2, b2, carry3, carry4, m4, m5);
	system bit5 b5(m5, carry4);
}
